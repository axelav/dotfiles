# Testing Clean LazyVim with GNU Stow Setup

Since you're using GNU Stow to manage your dotfiles, we need to adjust the approach to properly preserve your setup.

## Backing Up Your Current Configuration with Stow

1. First, unstow your current Neovim configuration:
   ```bash
   cd ~/path/to/your/dotfiles
   stow -D nvim   # Assuming 'nvim' is the package name you use with Stow
   ```

2. Rename or move the LazyVim related directories to create backups:
   ```bash
   mv ~/.local/share/nvim ~/.local/share/nvim.backup
   mv ~/.local/state/nvim ~/.local/state/nvim.backup
   mv ~/.cache/nvim ~/.cache/nvim.backup
   ```

3. Keep your original dotfiles directory intact - no need to modify it.

## Setting Up a Clean LazyVim for Testing

1. Create a temporary directory for the clean install:
   ```bash
   mkdir -p ~/temp_lazyvim_test/.config
   ```

2. Clone the LazyVim starter template to this temporary location:
   ```bash
   git clone https://github.com/LazyVim/starter ~/temp_lazyvim_test/.config/nvim
   ```

3. Remove the .git directory:
   ```bash
   rm -rf ~/temp_lazyvim_test/.config/nvim/.git
   ```

4. Create symbolic links manually for testing:
   ```bash
   ln -s ~/temp_lazyvim_test/.config/nvim ~/.config/nvim
   ```

5. Start Neovim to test the clean installation:
   ```bash
   nvim
   ```

## Restoring Your Original Stow-managed Configuration

When you're done testing:

1. Remove the symbolic link to the temporary configuration:
   ```bash
   rm ~/.config/nvim
   ```

2. Clean up the temporary LazyVim directories:
   ```bash
   rm -rf ~/.local/share/nvim
   rm -rf ~/.local/state/nvim
   rm -rf ~/.cache/nvim
   ```

3. Restore your backed-up data directories:
   ```bash
   mv ~/.local/share/nvim.backup ~/.local/share/nvim
   mv ~/.local/state/nvim.backup ~/.local/state/nvim
   mv ~/.cache/nvim.backup ~/.cache/nvim
   ```

4. Re-stow your original configuration:
   ```bash
   cd ~/path/to/your/dotfiles
   stow nvim   # Re-stow your Neovim configuration
   ```

5. Clean up the temporary test directory if desired:
   ```bash
   rm -rf ~/temp_lazyvim_test
   ```

This approach maintains your stow structure while allowing you to test a clean LazyVim installation.
