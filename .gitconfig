[alias]
  a         = add -A
  ap        = add -p
  b         = !clear && echo 'Current branches: \n' && git branch -vv
  cl        = clone
  co        = checkout
  cop       = checkout -p
  d         = diff
  dc        = diff --cached
  ds        = diff --stat
  l         = !clear && git log --graph --decorate --pretty=oneline -n 30 --abbrev-commit
  la        = log --graph --decorate --pretty=oneline --abbrev-commit --all
  lp        = log -p
  loc       = !git ls-files | xargs wc -l
  m         = commit -m
  pop       = stash pop
  # REF: http://gitready.com/intermediate/2009/02/12/easily-fetching-upstream-changes.html
  pup       = !"git fetch origin -v; git fetch upstream -v; git merge upstream/master"
  s         = !clear && git status -sb
  st        = !clear && git status
  sync      = !git pull && git push
  # REF: http://stackoverflow.com/questions/927358/undo-the-last-git-commit
  undo      = reset --soft HEAD~1
  undomerge = reset --merge HEAD~1
  undopush  = push -f origin HEAD^:master
  update    = !git pull --rebase --prune $@
  # NOTE: `git reflog` to find sha of unreachable commit this creates; commit msg 'wipe savepoint'
  wipe      = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard

[apply]
  # detect whitespace errors when applying a patch
  whitespace = fix

[core]
  # use custom `.gitignore` and `.gitattributes`
  excludesfile = ~/.gitignore
  # treat spaces before tabs and all kinds of trailing whitespace as an error
  whitespace = space-before-tab,trailing-space
  autocrlf = input

[color]
  # use colors in git commands that are capable of colored output when outputting to the terminal
  ui = auto

[color "branch"]
  current = blue reverse
  local = yellow
  remote = magenta

[color "diff"]
  meta = yellow
  frag = magenta
  old = red
  new = green

[color "status"]
  added = yellow
  changed = green
  untracked = red

[grep]
  lineNumber = true

[merge]
  # include summaries of merged commits in newly created merge commit messages
  log = true

# url shorthands
[url "git@github.com:"]
  insteadOf = "gh:"
  pushInsteadOf = "github:"
  pushInsteadOf = "git://github.com/"
[url "git://github.com/"]
  insteadOf = "github:"
[url "git@gist.github.com:"]
  insteadOf = "gst:"
  pushInsteadOf = "gist:"
  pushInsteadOf = "git://gist.github.com/"
[url "git://gist.github.com/"]
  insteadOf = "gist:"

[push]
  default = current
  followTags = true
